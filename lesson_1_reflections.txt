How did viewing a diff between two versions of a file help you see the bug that was introduced?

By viewing the difference, you remove the need to look at the entire file.


How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

In case you introduce a bug, you can roll back your changes or compare against the previous to see the diff.

Git
 - commit

 What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

 You have better control over what is a logical unit of change.


 Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

 Code files that work together are potentionally affected after each commit. So they should be treated together.

 How can you use the commands git log and git diff to view the history of files?

You can view the history using the log comments.

How might using version control make you more confident to make changes that could break something?

I can always roll back to the previous. So you have more room for exploration.

Now that you have your workspace set up, what do you want to try using Git for?

To start programming! Or blogging.
